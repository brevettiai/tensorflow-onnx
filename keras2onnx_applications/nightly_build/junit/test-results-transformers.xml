<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="15" skipped="11" tests="26" time="3.739" timestamp="2021-04-26T16:00:44.901239" hostname="MININT-44293CS"><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_3layer_gpt2" time="0.001"><skipped type="pytest.skip" message="Output shape mismatch for tf model prediction.">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:65: Output shape mismatch for tf model prediction.</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForMaskedLM" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFBertForMaskedLM&gt;

    def test_TFBertForMaskedLM(self):
&gt;       from transformers import BertConfig, TFBertForMaskedLM
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:110: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForNextSentencePrediction" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:124: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForPreTraining" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:93: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForQuestionAnswering" time="0.001"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFBertForQuestionAnswering&gt;

    def test_TFBertForQuestionAnswering(self):
&gt;       from transformers import BertConfig, TFBertForQuestionAnswering
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:165: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForSequenceClassification" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFBertForSequenceClassification&gt;

    def test_TFBertForSequenceClassification(self):
&gt;       from transformers import BertConfig, TFBertForSequenceClassification
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:139: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertForTokenClassification" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFBertForTokenClassification&gt;

    def test_TFBertForTokenClassification(self):
&gt;       from transformers import BertConfig, TFBertForTokenClassification
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:152: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFBertModel" time="0.001"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFBertModel&gt;

    def test_TFBertModel(self):
&gt;       from transformers import BertConfig, TFBertModel
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:79: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFDistilBertForMaskedLM" time="0.001"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFDistilBertForMaskedLM&gt;

    def test_TFDistilBertForMaskedLM(self):
&gt;       from transformers import DistilBertConfig, TFDistilBertForMaskedLM
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:345: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFDistilBertForQuestionAnswering" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFDistilBertForQuestionAnswering&gt;

    def test_TFDistilBertForQuestionAnswering(self):
&gt;       from transformers import DistilBertConfig, TFDistilBertForQuestionAnswering
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:387: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFDistilBertForSequenceClassification" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:359: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFDistilBertForTokenClassification" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFDistilBertForTokenClassification&gt;

    def test_TFDistilBertForTokenClassification(self):
&gt;       from transformers import DistilBertConfig, TFDistilBertForTokenClassification
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:374: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFDistilBertModel" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFDistilBertModel&gt;

    def test_TFDistilBertModel(self):
&gt;       from transformers import DistilBertConfig, TFDistilBertModel
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:332: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFGPT2" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFGPT2&gt;

    def test_TFGPT2(self):
        if enable_full_transformer_test:
            from transformers import GPT2Config, TFGPT2Model, TFGPT2LMHeadModel, TFGPT2DoubleHeadsModel
            model_list = [TFGPT2Model, TFGPT2LMHeadModel, TFGPT2DoubleHeadsModel]
        else:
&gt;           from transformers import GPT2Config, TFGPT2Model
E           ModuleNotFoundError: No module named 'transformers'

test_transformers.py:182: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFOpenAIGPTDoubleHeadsModel" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFOpenAIGPTDoubleHeadsModel&gt;

    def test_TFOpenAIGPTDoubleHeadsModel(self):
&gt;       from transformers import OpenAIGPTConfig, TFOpenAIGPTDoubleHeadsModel
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:256: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFOpenAIGPTLMHeadModel" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFOpenAIGPTLMHeadModel&gt;

    def test_TFOpenAIGPTLMHeadModel(self):
&gt;       from transformers import OpenAIGPTConfig, TFOpenAIGPTLMHeadModel
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:242: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFOpenAIGPTModel" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:227: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFRobertaForMaskedLM" time="0.001"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFRobertaForMaskedLM&gt;

    def test_TFRobertaForMaskedLM(self):
&gt;       from transformers import RobertaConfig, TFRobertaForMaskedLM
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:414: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFRobertaForSequenceClassification" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFRobertaForSequenceClassification&gt;

    def test_TFRobertaForSequenceClassification(self):
&gt;       from transformers import RobertaConfig, TFRobertaForSequenceClassification
E       ModuleNotFoundError: No module named 'transformers'

test_transformers.py:429: ModuleNotFoundError</failure></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFRobertaForTokenClassification" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:441: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFRobertaModel" time="0.001"><skipped type="pytest.skip" message="Full transfomer test is not enabled">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:399: Full transfomer test is not enabled</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFXLMForQuestionAnsweringSimple" time="0.001"><skipped type="pytest.skip" message="tensorflow.GraphDef exceeds maximum protobuf size of 2GB">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:317: tensorflow.GraphDef exceeds maximum protobuf size of 2GB</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFXLMForSequenceClassification" time="0.001"><skipped type="pytest.skip" message="tensorflow.GraphDef exceeds maximum protobuf size of 2GB">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:303: tensorflow.GraphDef exceeds maximum protobuf size of 2GB</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFXLMModel" time="0.001"><skipped type="pytest.skip" message="tensorflow.GraphDef exceeds maximum protobuf size of 2GB">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:271: tensorflow.GraphDef exceeds maximum protobuf size of 2GB</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFXLMWithLMHeadModel" time="0.001"><skipped type="pytest.skip" message="tensorflow.GraphDef exceeds maximum protobuf size of 2GB">C:\Users\tomwi\OneDrive - Microsoft\ONNX\keras-onnx\applications\nightly_build\test_transformers.py:287: tensorflow.GraphDef exceeds maximum protobuf size of 2GB</skipped></testcase><testcase classname="applications.nightly_build.test_transformers.TestTransformers" name="test_TFXLNet" time="0.002"><failure message="ModuleNotFoundError: No module named 'transformers'">self = &lt;test_transformers.TestTransformers testMethod=test_TFXLNet&gt;

    @unittest.skipIf(get_maximum_opset_supported() &lt; 12, "Einsum is not supported until opset 12.")
    def test_TFXLNet(self):
        if enable_full_transformer_test:
            from transformers import XLNetConfig, TFXLNetModel, TFXLNetLMHeadModel, TFXLNetForSequenceClassification, \
                TFXLNetForTokenClassification, TFXLNetForQuestionAnsweringSimple, XLNetTokenizer
            model_list = [TFXLNetModel, TFXLNetLMHeadModel, TFXLNetForSequenceClassification, \
                TFXLNetForTokenClassification, TFXLNetForQuestionAnsweringSimple]
        else:
&gt;           from transformers import XLNetConfig, TFXLNetModel, XLNetTokenizer
E           ModuleNotFoundError: No module named 'transformers'

test_transformers.py:208: ModuleNotFoundError</failure></testcase></testsuite></testsuites>